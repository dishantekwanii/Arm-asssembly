  .syntax unified
  .cpu cortex-m4
  .fpu softvfp
  .thumb
  .global  Main

Main:

LDRB R2, [R1]
MOV R6, #0
MOV R7, #0

Loop:
CMP R2, #0 
BEQ FinalResult
CMP R2, #43 
BEQ Addition
CMP R2, #45
BEQ Subtraction
CMP R2, #42
BEQ Multiplication
CMP R2, #32
BEQ Space

 B accumulateNumber

SUB R2, R2, #48
PUSH {R2}
ADD R1, R1, #1
LDRB R2, [R1] 
B Loop

Addition:
CMP R7, #0
BNE skipPoppingAdd
POP {R3, R4} 
skipPoppingAdd:
POP {R3}
MOV R4, R6
MOV R6, #0
MOV R7, #0
ADD R5, R3, R4
PUSH {R5}
ADD R1, R1, #1 
LDRB R2, [R1] 
B Loop

Subtraction:
CMP R7, #0
BNE skipPoppingSub
POP {R3, R4} 
skipPoppingSub:
POP {R3}
MOV R4, R6
MOV R6, #0
MOV R7, #0 
SUB R5, R4, R3
PUSH {R5}
ADD R1, R1, #1 
LDRB R2, [R1] 
B Loop

Multiplication:
CMP R7, #0
BNE skipPoppingMul
POP {R3, R4} 
skipPoppingMul:
POP {R3}
MOV R4, R6
MOV R6, #0
MOV R7, #0
MUL R5, R3, R4
PUSH {R5}
ADD R1, R1, #1
LDRB R2, [R1] 
B Loop

Space: 
ADD R1, R1, #1
PUSH {R6}
MOV R6, #0
MOV R7, #0
LDRB R2, [R1] 
B Loop

accumulateNumber:
CMP R7, #0
BEQ just_add
MOV R10, #10
MUL R6, R6, R10
just_add:
MOV R6, R2
MOV R7, #1
 B Loop

FinalResult:
POP {R0}

End_Main:
  BX    lr

